[{"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\components\\SideNav.js":"3","C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\components\\UserCard.js":"4","C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\feed\\user.js":"5","C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\components\\ChatBox.js":"6","C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\components\\InputBox.js":"7","C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\components\\MessageBox.js":"8","C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\theme.js":"9","C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\constants\\resource.js":"10","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\index.js":"11","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\App.js":"12","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\theme.js":"13","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\SnakeGame.js":"14","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\Minesweeper.js":"15","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\components\\common.js":"16","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\JumpSlide.js":"17","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\MemoryGame.js":"18","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\SpaceInvaders.js":"19","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\TicTacToe.js":"20","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\ChromeDino.js":"21","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\FlappyBird.js":"22","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\Tetris.js":"23","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\Tenet.js":"24","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\Pacman.js":"25","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\feed\\resource.js":"26","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\CandyCrush.js":"27"},{"size":197,"mtime":1607012420109,"results":"28","hashOfConfig":"29"},{"size":746,"mtime":1607424471833,"results":"30","hashOfConfig":"29"},{"size":896,"mtime":1607072319019,"results":"31","hashOfConfig":"29"},{"size":820,"mtime":1607072739385,"results":"32","hashOfConfig":"29"},{"size":372,"mtime":1607072332112,"results":"33","hashOfConfig":"29"},{"size":1928,"mtime":1607072607427,"results":"34","hashOfConfig":"29"},{"size":1430,"mtime":1607072225070,"results":"35","hashOfConfig":"29"},{"size":494,"mtime":1607408914680,"results":"36","hashOfConfig":"29"},{"size":392,"mtime":1607072637770,"results":"37","hashOfConfig":"29"},{"size":143,"mtime":1607071297313,"results":"38","hashOfConfig":"29"},{"size":197,"mtime":1607597337995,"results":"39","hashOfConfig":"40"},{"size":1768,"mtime":1607776833748,"results":"41","hashOfConfig":"40"},{"size":392,"mtime":1607072637770,"results":"42","hashOfConfig":"40"},{"size":3643,"mtime":1607597337863,"results":"43","hashOfConfig":"40"},{"size":5576,"mtime":1607597337819,"results":"44","hashOfConfig":"40"},{"size":729,"mtime":1607681210487,"results":"45","hashOfConfig":"40"},{"size":2425,"mtime":1607597337690,"results":"46","hashOfConfig":"40"},{"size":4201,"mtime":1607597337750,"results":"47","hashOfConfig":"40"},{"size":4872,"mtime":1607776834759,"results":"48","hashOfConfig":"40"},{"size":2332,"mtime":1607601216370,"results":"49","hashOfConfig":"40"},{"size":4707,"mtime":1607668102180,"results":"50","hashOfConfig":"40"},{"size":5701,"mtime":1607597337656,"results":"51","hashOfConfig":"40"},{"size":8382,"mtime":1607707926953,"results":"52","hashOfConfig":"40"},{"size":7927,"mtime":1607673187011,"results":"53","hashOfConfig":"40"},{"size":6053,"mtime":1607775492556,"results":"54","hashOfConfig":"40"},{"size":2607,"mtime":1607707987020,"results":"55","hashOfConfig":"40"},{"size":7802,"mtime":1607776833996,"results":"56","hashOfConfig":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1uw3rlt",{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1it9hws",{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\index.js",[],["115","116"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\App.js",["117","118","119","120","121","122","123","124"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\components\\SideNav.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\components\\UserCard.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\feed\\user.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\components\\ChatBox.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\components\\InputBox.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\components\\MessageBox.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\theme.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\messenger-app\\src\\constants\\resource.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\App.js",["125"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\theme.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\SnakeGame.js",["126","127","128","129"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\Minesweeper.js",["130","131","132"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\components\\common.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\JumpSlide.js",["133"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\MemoryGame.js",["134"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\SpaceInvaders.js",["135","136","137","138"],"import { Button, Grid, Result } from \"components/common\";\nimport React, { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport AlienImage from \"assets/images/alien.png\";\nimport Jet from \"assets/images/jet.png\";\nimport ExplosionGif from \"assets/gif/explosion.gif\";\nimport Sound from \"assets/sounds/laser.mp3\";\n\nconst Shooter = css`\n  background-image: url(${Jet});\n  background-size: cover;\n`;\nconst Invader = css`\n  background-image: url(${AlienImage});\n  background-size: contain;\n`;\nconst Explosion = css`\n  background-image: url(${ExplosionGif});\n  background-size: contain;\n  z-index: 2;\n  position: relative;\n`;\nconst Laser = css`\n  background-color: yellow;\n  box-shadow: 0px 0px 16px 7px #ffae00;\n  z-index: 2;\n  position: relative;\n  width: 5px;\n  height: 10px;\n  margin: 0 auto;\n`;\nconst Cell = styled.div`\n  width: 20px;\n  height: 20px;\n  box-sizing: border-box;\n  ${({ isInvader }) => isInvader && Invader};\n  ${({ isShooter }) => isShooter && Shooter};\n  ${({ isLaser }) => isLaser && Laser};\n  ${({ isExplosion }) => isExplosion && Explosion};\n`;\nlet timer = null;\nlet laserTimer = null;\nconst SpaceInvaders = () => {\n  const width = 20;\n  const totalAlien = 33;\n  const [shooterIndex, setShooterIndex] = useState(385);\n  const [explodeIndex, setExplodeIndex] = useState(\"\");\n  const [direction, setDirection] = useState(1);\n  const [alienGroup, setAlienGroup] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [laserIndex, setLaserIndex] = useState(\"\");\n  const [start, setStart] = useState(false);\n  useEffect(() => {\n    // prettier-ignore\n    let alienLayout = [\n      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20,\n      21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 40,\n      41, 42, 43, 44, 45, 46, 47, 48, 49, 50,];\n    setDirection(1);\n    setAlienGroup(alienLayout);\n  }, [start]);\n  const moveShooter = (e) => {\n    if (!start) return;\n    switch (e.key) {\n      case \"ArrowRight\":\n        if (shooterIndex % width < width - 1) setShooterIndex(shooterIndex + 1);\n        break;\n      case \"ArrowLeft\":\n        if (shooterIndex % width) setShooterIndex(shooterIndex - 1);\n        break;\n      case \"ArrowUp\":\n        shoot();\n        break;\n    }\n  };\n  const moveInvaders = () => {\n    const leftEdge = alienGroup[0] % width === 0;\n    // const rightEdge = (alienGroup[alienGroup.length - 1] % width === width - 1)\n    const rightEdge = alienGroup.find((alien) => alien % width === width - 1);\n    let newDirection = direction;\n    if ((leftEdge && direction === -1) || (rightEdge && direction === 1)) {\n      newDirection = width;\n    } else if (direction === width) {\n      if (leftEdge) newDirection = 1;\n      else newDirection = -1;\n    }\n    setDirection(newDirection);\n    setAlienGroup((prev) => prev.map((e) => e + newDirection));\n  };\n  const shoot = () => {\n    var birdSound = new Audio(Sound);\n    birdSound.loop = false;\n    birdSound.play();\n    setLaserIndex(shooterIndex - width);\n  };\n  useEffect(() => {\n    if (laserIndex) {\n      if (alienGroup.includes(laserIndex)) {\n        setExplodeIndex(laserIndex);\n        let newAlien = [...alienGroup];\n        newAlien.splice(newAlien.indexOf(laserIndex), 1);\n        console.error(laserIndex, newAlien);\n        setLaserIndex(\"\");\n        setAlienGroup(newAlien);\n        setTimeout(() => {\n          setExplodeIndex(\"\");\n        }, 250);\n      } else {\n        laserTimer = setTimeout(() => {\n          setLaserIndex((prev) => prev - width);\n        }, 50);\n      }\n    }\n    return () => clearTimeout(laserTimer);\n  }, [laserIndex]);\n\n  useEffect(() => {\n    if (start) {\n      if (alienGroup.includes(shooterIndex)) {\n        setGameOver(\"GAME OVER\");\n        clearTimeout(timer);\n      } else if (!alienGroup.length) {\n        setGameOver(\"SUCCESS\");\n        clearTimeout(timer);\n      } else {\n        timer = setTimeout(() => {\n          moveInvaders();\n        }, 500);\n      }\n    } else {\n      clearTimeout(timer);\n    }\n    return () => clearTimeout(timer);\n  }, [alienGroup]);\n  useEffect(() => {\n    window.addEventListener(\"keydown\", moveShooter);\n    return () => window.removeEventListener(\"keydown\", moveShooter);\n  }, [shooterIndex, alienGroup, direction]);\n  const toggleGame = () => {\n    setStart((prev) => !prev);\n  };\n  return (\n    <div>\n      <Grid color={\"black\"}>\n        {[...Array(width * width)].map((e, i) => (\n          <Cell\n            key={i}\n            isInvader={alienGroup.includes(i)}\n            isShooter={shooterIndex === i}\n            isLaser={laserIndex === i}\n            isExplosion={explodeIndex === i}\n          ></Cell>\n        ))}\n      </Grid>\n      <Button onClick={toggleGame}>{start ? \"STOP\" : \"Start\"}</Button>\n      {gameOver ? <Result>{gameOver}</Result> : \"\"}\n      <div>your score : {totalAlien - alienGroup.length}</div>\n    </div>\n  );\n};\n\nexport default SpaceInvaders;\n","C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\TicTacToe.js",["139"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\ChromeDino.js",["140","141"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\FlappyBird.js",["142","143","144","145"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\Tetris.js",["146","147","148"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\Tenet.js",["149","150","151","152","153","154","155","156"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\Pacman.js",["157","158","159","160"],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\feed\\resource.js",[],"C:\\Users\\Lenovo\\Desktop\\COGNITE\\mini-games\\src\\games\\CandyCrush.js",["161","162","163","164","165"],"import { Button, Grid } from \"components/common\";\nimport React, { useEffect, useState } from \"react\";\nimport Candy1 from \"assets/images/candy_1.png\";\nimport Candy2 from \"assets/images/candy_2.png\";\nimport Candy3 from \"assets/images/candy_3.png\";\nimport Candy4 from \"assets/images/candy_4.png\";\nimport Candy5 from \"assets/images/candy_5.png\";\nimport Candy6 from \"assets/images/candy_6.png\";\nimport BgImg from \"assets/images/cupcake_bg.jpg\";\nimport Confetti from \"assets/gif/confetti.gif\";\nimport styled, { css, keyframes } from \"styled-components\";\n\nconst ShakeAnim = keyframes`\n    0% { transform: translateX(0px) }\n    10% { transform: translateX(2px) }\n    20% { transform: translateX(4px) }\n    30% { transform: translateX(6px) }\n    40% { transform: translateX(4px) }\n    50% { transform: translateX(2px) }\n    60% { transform: translateX(0px) }\n    70% { transform: translateX(2px) }\n    80% { transform: translateX(4px) }\n    90% { transform: translateX(6px) }\n    100% { transform: translateX(8px) }\n`;\nconst Shake = css`\n  animation: ${ShakeAnim} 0.2s infinite;\n`;\nconst ZoomAnim = keyframes`\n    0% {\n        transform: scale(1);\n    }\n    50% {\n        transform: scale(1.1);\n    }\n    100% {\n        transform: scale(1);\n    }\n`;\nconst Active = css`\n  border: 2px solid white;\n  animation: ${ZoomAnim} 1s infinite;\n  background: #5d7ea8;\n`;\nconst CandyImage = styled.img`\n  width: 50px;\n  height: 50px;\n  padding: 2.5px;\n  box-sizing: border-box;\n  :hover {\n    border: ${({ scale }) => (scale ? \"none\" : \"2px solid white\")};\n  }\n  ${({ active }) => active && Active};\n  ${({ shake }) => shake && Shake};\n  transform: scale(${({ scale }) => scale});\n`;\nconst Score = styled.div`\n  background: #dd7c95;\n  color: white;\n  border-radius: 50%;\n  height: 45px;\n  width: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 4px solid #c90707;\n  box-sizing: border-box;\n  margin: 10px;\n`;\nconst Background = styled.img`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: -1;\n  filter: blur(1px);\n`;\n\nconst CANDIES = [\n  { id: 1, img: Candy1, score: 50 },\n  { id: 2, img: Candy2, score: 60 },\n  { id: 3, img: Candy3, score: 70 },\n  { id: 4, img: Candy4, score: 80 },\n  { id: 5, img: Candy5, score: 90 },\n  { id: 6, img: Candy6, score: 10 },\n];\nlet matchTimer = null;\nlet fillTimer = null;\nlet shakeTimer = null;\nconst CandyCrush = () => {\n  const width = 8;\n  const [candyArray, setCandyArray] = useState([]);\n  const [start, setStart] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const [score, setScore] = useState(0);\n  const [shake, setShake] = useState([]);\n  const fillArrayWithCandies = () => {\n    const newArray = [...Array(width * width)].map(\n      () => CANDIES[Math.floor(Math.random() * CANDIES.length)]\n    );\n    newArray[7] = CANDIES[0];\n    newArray[8] = CANDIES[0];\n    newArray[9] = CANDIES[0];\n    setCandyArray(newArray);\n  };\n  const clearTimer = () => {\n    clearTimeout(matchTimer);\n    clearTimeout(fillTimer);\n    clearTimeout(shakeTimer);\n  };\n  const restartGame = () => {\n    setScore(0);\n    clearTimer();\n    setShake([]);\n    setActiveIndex(null);\n    fillArrayWithCandies();\n  };\n  useEffect(() => {\n    restartGame();\n  }, []);\n\n  const isValidCombo = (array, index) => {\n    let combo = [\n      [index, index + 1, index + 2],\n      [index - 1, index, index + 1],\n      [index - 2, index - 1, index],\n      [index, index + width, index + 2 * width],\n      [index - width, index, index + width],\n      [index - 2 * width, index - width, index],\n    ];\n    const isSameRow = (a, b, c) =>\n      Math.floor(a / width) === Math.floor(b / width) &&\n      Math.floor(a / width) === Math.floor(c / width);\n    const isSameCol = (a, b, c) =>\n      Math.floor(a / width) !== Math.floor(b / width) &&\n      Math.floor(a / width) !== Math.floor(c / width) &&\n      Math.floor(b / width) !== Math.floor(c / width);\n    return combo.find(\n      ([a, b, c]) =>\n        (isSameCol(a, b, c) || isSameRow(a, b, c)) &&\n        array[a]?.id &&\n        array[a]?.id === array[b]?.id &&\n        array[a]?.id === array[c]?.id\n    );\n  };\n  const findValidMatch = () => {\n    matchTimer = setTimeout(() => {\n      let removableIndices;\n      for (let i = 0; i < candyArray.length; i++) {\n        removableIndices = isValidCombo(candyArray, i);\n        if (removableIndices) {\n          break;\n        }\n      }\n      if (removableIndices) {\n        let newCandyArray = [...candyArray];\n        setScore((prev) => prev + newCandyArray[removableIndices[0]].score);\n        removableIndices.forEach(\n          (e) => (newCandyArray[e] = { img: Confetti, scale: 2.5 })\n        );\n        setCandyArray(newCandyArray);\n      }\n    }, 150);\n  };\n  useEffect(() => {\n    findValidMatch();\n    return () => clearTimeout(matchTimer);\n  }, [candyArray]);\n  const getNextNonEmptyIndex = (array, index) => {\n    let newIndex = -1;\n    for (let i = 1; i < width; i++) {\n      if (array[index - i * width]?.id) {\n        newIndex = index - i * width;\n        break;\n      }\n    }\n    return newIndex;\n  };\n  const fillEmptyArray = (array) =>\n    array.map((e) =>\n      e.id ? e : CANDIES[Math.floor(Math.random() * CANDIES.length)]\n    );\n  const moveArrayDown = () => {\n    fillTimer = setTimeout(() => {\n      let newCandyArray = [...candyArray];\n      let shouldChange = false;\n      for (let i = candyArray.length - 1; i >= width; i--) {\n        if (!newCandyArray[i].id) {\n          let newIndex = getNextNonEmptyIndex(newCandyArray, i);\n          if (newIndex !== -1) {\n            console.error(\"swapping\", shouldChange);\n            shouldChange = [newIndex, i];\n            newCandyArray[i] = newCandyArray[newIndex];\n            newCandyArray[newIndex] = {};\n          }\n        }\n      }\n      if (shouldChange) {\n        newCandyArray = fillEmptyArray(newCandyArray);\n        setCandyArray(newCandyArray);\n      } else {\n        let isEmptyArrayPresent = newCandyArray.find((e) => !e.id);\n        if (isEmptyArrayPresent) {\n          newCandyArray = fillEmptyArray(newCandyArray);\n          setCandyArray(newCandyArray);\n        }\n      }\n    }, 1000);\n  };\n  useEffect(() => {\n    moveArrayDown();\n    return () => clearTimeout(fillTimer);\n  }, [candyArray]);\n\n  useEffect(() => {\n    if (shake.length) {\n      console.error(\"will clear\");\n      shakeTimer = setTimeout(() => {\n        console.error(\"clearing\");\n        setShake([]);\n      }, 200);\n    }\n    return () => clearTimeout(shakeTimer);\n  }, [shake]);\n\n  const swapCandies = (index, newIndex) => {\n    let newArray = [...candyArray];\n    let temp = newArray[index];\n    newArray[index] = newArray[newIndex];\n    newArray[newIndex] = temp;\n    let validNewIndex = [index + 1, index - 1, index + width, index - width];\n    if (validNewIndex.includes(newIndex)) {\n      if (isValidCombo(newArray, index) || isValidCombo(newArray, newIndex)) {\n        setCandyArray(newArray);\n        setActiveIndex(null);\n      } else {\n        setShake([index, newIndex]);\n      }\n    } else {\n      setActiveIndex(newIndex);\n    }\n  };\n  const onClickHandler = (index) => {\n    if (activeIndex === index) return;\n    if (activeIndex !== null) {\n      swapCandies(activeIndex, index);\n    } else {\n      setActiveIndex(index);\n    }\n  };\n\n  return (\n    <div>\n      <Grid color={\"rgb(4 114 208 / 50%)\"}>\n        {candyArray.map(({ img, scale }, i) => (\n          <CandyImage\n            onClick={() => onClickHandler(i)}\n            key={i}\n            src={img}\n            scale={scale}\n            active={activeIndex === i}\n            shake={shake.includes(i)}\n          />\n        ))}\n        <Background src={BgImg} />\n      </Grid>\n      <Score>{score}</Score>\n      <Button onClick={restartGame}>(Re)Start</Button>\n    </div>\n  );\n};\n\nexport default CandyCrush;\n",["166","167"],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":2,"column":18,"nodeType":"174","messageId":"175","endLine":2,"endColumn":31},{"ruleId":"172","severity":1,"message":"176","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":21},{"ruleId":"172","severity":1,"message":"177","line":3,"column":23,"nodeType":"174","messageId":"175","endLine":3,"endColumn":28},{"ruleId":"172","severity":1,"message":"178","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":15},{"ruleId":"172","severity":1,"message":"179","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":15},{"ruleId":"172","severity":1,"message":"180","line":8,"column":7,"nodeType":"174","messageId":"175","endLine":8,"endColumn":16},{"ruleId":"172","severity":1,"message":"181","line":14,"column":10,"nodeType":"174","messageId":"175","endLine":14,"endColumn":22},{"ruleId":"172","severity":1,"message":"182","line":14,"column":24,"nodeType":"174","messageId":"175","endLine":14,"endColumn":39},{"ruleId":"172","severity":1,"message":"183","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":17},{"ruleId":"184","severity":1,"message":"185","line":53,"column":19,"nodeType":"186","messageId":"187","endLine":53,"endColumn":21},{"ruleId":"188","severity":1,"message":"189","line":90,"column":6,"nodeType":"190","endLine":90,"endColumn":49,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":92,"column":5,"nodeType":"194","messageId":"195","endLine":105,"endColumn":6},{"ruleId":"188","severity":1,"message":"196","line":110,"column":6,"nodeType":"190","endLine":110,"endColumn":34,"suggestions":"197"},{"ruleId":"188","severity":1,"message":"198","line":86,"column":24,"nodeType":"190","endLine":86,"endColumn":26,"suggestions":"199"},{"ruleId":"172","severity":1,"message":"200","line":109,"column":9,"nodeType":"174","messageId":"175","endLine":109,"endColumn":14},{"ruleId":"188","severity":1,"message":"201","line":164,"column":6,"nodeType":"190","endLine":164,"endColumn":16,"suggestions":"202"},{"ruleId":"188","severity":1,"message":"196","line":80,"column":6,"nodeType":"190","endLine":80,"endColumn":14,"suggestions":"203"},{"ruleId":"188","severity":1,"message":"204","line":117,"column":6,"nodeType":"190","endLine":117,"endColumn":33,"suggestions":"205"},{"ruleId":"192","severity":1,"message":"193","line":64,"column":5,"nodeType":"194","messageId":"195","endLine":74,"endColumn":6},{"ruleId":"188","severity":1,"message":"206","line":115,"column":6,"nodeType":"190","endLine":115,"endColumn":18,"suggestions":"207"},{"ruleId":"188","severity":1,"message":"208","line":134,"column":6,"nodeType":"190","endLine":134,"endColumn":18,"suggestions":"209"},{"ruleId":"188","severity":1,"message":"210","line":138,"column":6,"nodeType":"190","endLine":138,"endColumn":43,"suggestions":"211"},{"ruleId":"188","severity":1,"message":"212","line":70,"column":6,"nodeType":"190","endLine":70,"endColumn":15,"suggestions":"213"},{"ruleId":"188","severity":1,"message":"214","line":107,"column":6,"nodeType":"190","endLine":107,"endColumn":23,"suggestions":"215"},{"ruleId":"188","severity":1,"message":"216","line":141,"column":6,"nodeType":"190","endLine":141,"endColumn":21,"suggestions":"217"},{"ruleId":"172","severity":1,"message":"218","line":70,"column":9,"nodeType":"174","messageId":"175","endLine":70,"endColumn":16},{"ruleId":"188","severity":1,"message":"219","line":108,"column":6,"nodeType":"190","endLine":108,"endColumn":23,"suggestions":"220"},{"ruleId":"188","severity":1,"message":"221","line":151,"column":6,"nodeType":"190","endLine":151,"endColumn":32,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":204,"column":11,"nodeType":"225","endLine":204,"endColumn":36},{"ruleId":"188","severity":1,"message":"226","line":175,"column":6,"nodeType":"190","endLine":175,"endColumn":20,"suggestions":"227"},{"ruleId":"192","severity":1,"message":"193","line":216,"column":5,"nodeType":"194","messageId":"195","endLine":226,"endColumn":6},{"ruleId":"188","severity":1,"message":"196","line":231,"column":6,"nodeType":"190","endLine":231,"endColumn":20,"suggestions":"228"},{"ruleId":"184","severity":1,"message":"185","line":67,"column":59,"nodeType":"186","messageId":"187","endLine":67,"endColumn":61},{"ruleId":"188","severity":1,"message":"229","line":84,"column":6,"nodeType":"190","endLine":84,"endColumn":13,"suggestions":"230"},{"ruleId":"188","severity":1,"message":"231","line":94,"column":6,"nodeType":"190","endLine":94,"endColumn":15,"suggestions":"232"},{"ruleId":"188","severity":1,"message":"233","line":160,"column":6,"nodeType":"190","endLine":160,"endColumn":35,"suggestions":"234"},{"ruleId":"188","severity":1,"message":"235","line":177,"column":6,"nodeType":"190","endLine":177,"endColumn":15,"suggestions":"236"},{"ruleId":"188","severity":1,"message":"237","line":186,"column":6,"nodeType":"190","endLine":186,"endColumn":39,"suggestions":"238"},{"ruleId":"192","severity":1,"message":"193","line":191,"column":5,"nodeType":"194","messageId":"195","endLine":204,"endColumn":6},{"ruleId":"188","severity":1,"message":"239","line":210,"column":6,"nodeType":"190","endLine":210,"endColumn":27,"suggestions":"240"},{"ruleId":"188","severity":1,"message":"241","line":105,"column":6,"nodeType":"190","endLine":105,"endColumn":49,"suggestions":"242"},{"ruleId":"188","severity":1,"message":"243","line":132,"column":6,"nodeType":"190","endLine":132,"endColumn":42,"suggestions":"244"},{"ruleId":"223","severity":1,"message":"224","line":192,"column":17,"nodeType":"225","endLine":192,"endColumn":40},{"ruleId":"223","severity":1,"message":"224","line":199,"column":17,"nodeType":"225","endLine":199,"endColumn":62},{"ruleId":"172","severity":1,"message":"245","line":92,"column":12,"nodeType":"174","messageId":"175","endLine":92,"endColumn":17},{"ruleId":"172","severity":1,"message":"246","line":92,"column":19,"nodeType":"174","messageId":"175","endLine":92,"endColumn":27},{"ruleId":"188","severity":1,"message":"247","line":117,"column":8,"nodeType":"190","endLine":117,"endColumn":10,"suggestions":"248"},{"ruleId":"188","severity":1,"message":"249","line":153,"column":8,"nodeType":"190","endLine":153,"endColumn":20,"suggestions":"250"},{"ruleId":"188","severity":1,"message":"251","line":195,"column":8,"nodeType":"190","endLine":195,"endColumn":20,"suggestions":"252"},{"ruleId":"168","replacedBy":"253"},{"ruleId":"170","replacedBy":"254"},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'GlobalStyle' is defined but never used.","'theme' is defined but never used.","'ChatBox' is defined but never used.","'SideNav' is defined but never used.","'Container' is assigned a value but never used.","'activeFriend' is assigned a value but never used.","'setActiveFriend' is assigned a value but never used.","'JumpSlide' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'apple' and 'moveSnake'. Either include them or remove the dependency array.","ArrayExpression",["257"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'keyHandler'. Either include it or remove the dependency array.",["258"],"React Hook useEffect has missing dependencies: 'bombCount' and 'width'. Either include them or remove the dependency array.",["259"],"'timer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'squares'. Either include it or remove the dependency array.",["260"],["261"],"React Hook useEffect has missing dependencies: 'imageArray' and 'isSameImage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setVisibleArray' needs the current value of 'imageArray'.",["262"],"React Hook useEffect has a missing dependency: 'alienGroup'. Either include it or remove the dependency array.",["263"],"React Hook useEffect has missing dependencies: 'moveInvaders', 'shooterIndex', and 'start'. Either include them or remove the dependency array.",["264"],"React Hook useEffect has a missing dependency: 'moveShooter'. Either include it or remove the dependency array.",["265"],"React Hook useEffect has a missing dependency: 'calculateWinner'. Either include it or remove the dependency array.",["266"],"React Hook useEffect has a missing dependency: 'generateObstacles'. Either include it or remove the dependency array.",["267"],"React Hook useEffect has a missing dependency: 'control'. Either include it or remove the dependency array.",["268"],"'gravity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'generateObstacle'. Either include it or remove the dependency array.",["269"],"React Hook useEffect has a missing dependency: 'gameOver'. Either include it or remove the dependency array.",["270"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'cells', 'generateNewBlock', 'generateRandomNumber', and 'isBottomReached'. Either include them or remove the dependency array.",["271"],["272"],"React Hook useEffect has missing dependencies: 'fallTime' and 'reverse'. Either include them or remove the dependency array.",["273"],"React Hook useEffect has a missing dependency: 'fallTime'. Either include it or remove the dependency array.",["274"],"React Hook useEffect has a missing dependency: 'floor'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has missing dependencies: 'bottom', 'fall', 'left', and 'reverse'. Either include them or remove the dependency array.",["276"],"React Hook useEffect has a missing dependency: 'fall'. Either include it or remove the dependency array.",["277"],"React Hook useEffect has a missing dependency: 'playerHandler'. Either include it or remove the dependency array.",["278"],"React Hook useEffect has a missing dependency: 'ghosts'. Either include it or remove the dependency array.",["279"],"React Hook useEffect has a missing dependency: 'moveGhosts'. Either include it or remove the dependency array.",["280"],"'start' is assigned a value but never used.","'setStart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'restartGame'. Either include it or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'findValidMatch'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'moveArrayDown'. Either include it or remove the dependency array.",["283"],["255"],["256"],"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},"Update the dependencies array to be: [snake, direction, appleConsumed, gameOver, apple, moveSnake]",{"range":"338","text":"339"},"Update the dependencies array to be: [direction, gameOver, keyHandler, snake]",{"range":"340","text":"341"},"Update the dependencies array to be: [bombCount, width]",{"range":"342","text":"343"},"Update the dependencies array to be: [gameOver, squares]",{"range":"344","text":"345"},"Update the dependencies array to be: [bottom, keyHandler]",{"range":"346","text":"347"},"Update the dependencies array to be: [imageArray, isSameImage, openPicture, visibleArray]",{"range":"348","text":"349"},"Update the dependencies array to be: [alienGroup, laserIndex]",{"range":"350","text":"351"},"Update the dependencies array to be: [alienGroup, moveInvaders, shooterIndex, start]",{"range":"352","text":"353"},"Update the dependencies array to be: [shooterIndex, alienGroup, direction, moveShooter]",{"range":"354","text":"355"},"Update the dependencies array to be: [calculateWinner, squares]",{"range":"356","text":"357"},"Update the dependencies array to be: [gameOver, generateObstacles, start]",{"range":"358","text":"359"},"Update the dependencies array to be: [bottom, control, start]",{"range":"360","text":"361"},"Update the dependencies array to be: [start, gameOver, generateObstacle]",{"range":"362","text":"363"},"Update the dependencies array to be: [obstacles, bottom, start, gameOver]",{"range":"364","text":"365"},"Update the dependencies array to be: [start, block, isBottomReached, generateRandomNumber, cells, generateNewBlock]",{"range":"366","text":"367"},"Update the dependencies array to be: [block, keyHandler, start]",{"range":"368","text":"369"},"Update the dependencies array to be: [fallTime, reverse, start]",{"range":"370","text":"371"},"Update the dependencies array to be: [fallTime, reverse]",{"range":"372","text":"373"},"Update the dependencies array to be: [reverse, fall, bottom, left, floor]",{"range":"374","text":"375"},"Update the dependencies array to be: [bottom, ceiling, fall, left, reverse]",{"range":"376","text":"377"},"Update the dependencies array to be: [ceiling, floor, bottom, reverse, fall]",{"range":"378","text":"379"},"Update the dependencies array to be: [left, bottom, start, playerHandler]",{"range":"380","text":"381"},"Update the dependencies array to be: [pacman, start, cells, direction, gameOver, ghosts]",{"range":"382","text":"383"},"Update the dependencies array to be: [ghosts, direction, start, gameOver, moveGhosts]",{"range":"384","text":"385"},"Update the dependencies array to be: [restartGame]",{"range":"386","text":"387"},"Update the dependencies array to be: [candyArray, findValidMatch]",{"range":"388","text":"389"},"Update the dependencies array to be: [candyArray, moveArrayDown]",{"range":"390","text":"391"},[2456,2499],"[snake, direction, appleConsumed, gameOver, apple, moveSnake]",[3083,3111],"[direction, gameOver, keyHandler, snake]",[2741,2743],"[bombCount, width]",[5023,5033],"[gameOver, squares]",[2297,2305],"[bottom, keyHandler]",[3197,3224],"[imageArray, isSameImage, openPicture, visibleArray]",[3674,3686],"[alienGroup, laserIndex]",[4146,4158],"[alienGroup, moveInvaders, shooterIndex, start]",[4312,4349],"[shooterIndex, alienGroup, direction, moveShooter]",[1688,1697],"[calculateWinner, squares]",[2855,2872],"[gameOver, generateObstacles, start]",[3947,3962],"[bottom, control, start]",[2801,2818],"[start, gameOver, generateObstacle]",[4061,4087],"[obstacles, bottom, start, gameOver]",[5371,5385],"[start, block, isBottomReached, generateRandomNumber, cells, generateNewBlock]",[7056,7070],"[block, keyHandler, start]",[2437,2444],"[fallTime, reverse, start]",[2761,2770],"[fallTime, reverse]",[4959,4988],"[reverse, fall, bottom, left, floor]",[5462,5471],"[bottom, ceiling, fall, left, reverse]",[5750,5783],"[ceiling, floor, bottom, reverse, fall]",[6504,6525],"[left, bottom, start, playerHandler]",[2846,2889],"[pacman, start, cells, direction, gameOver, ghosts]",[3801,3837],"[ghosts, direction, start, gameOver, moveGhosts]",[3412,3414],"[restartGame]",[5112,5124],"[candyArray, findValidMatch]",[6805,6817],"[candyArray, moveArrayDown]"]